{{ if or (and .Release.IsInstall (eq .Values.createAdminAccount "on-install")) (eq .Values.createAdminAccount "always") }}
apiVersion: batch/v1
kind: Job
metadata:
  name: bootstrap-admin-account
  labels:
    section: core
spec:
  template:
    metadata:
      labels:
        app: assemblyline
        section: core
        component: bootstrap
    spec:
      containers:
      - name: pi
        image: {{ .Values.assemblylineCoreImage }}:{{ .Values.release }}
        command: ["python",  "/mount/bootstrap.py"]
        env:
          - name: INITIAL_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: initial-admin-password
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: FILESTORE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: filestore-password
        volumeMounts:
          {{ include "assemblyline.coreMounts" . | indent 10 }}
          - name: script-volume
            mountPath: /mount
        resources:
          requests:
            cpu: {{ .Values.installJobReqCPU }}
          limits:
            cpu: {{ .Values.installJobLimCPU }}
            {{ if .Values.namespaceResourceLimited }}
            memory: 1Gi
            {{ end }}
      volumes:
       {{ include "assemblyline.coreVolumes" . | indent 8 }}
        - name: script-volume
          configMap:
            name: {{ .Release.Name }}-bootstrap-script
            items:
              - key: bootstrap.py
                path: bootstrap.py
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
{{ end }}
---
#
#   Launch services so that they auto-install
#
{{ if .Release.IsInstall }}
{{- range .Values.autoInstallServices }}
apiVersion: batch/v1
kind: Job
metadata:
  name: install-alsvc-{{ . }}
  labels:
    app: assemblyline-{{ $.Release.Name }}
    section: service
spec:
  template:
    metadata:
      labels:
        app: assemblyline-{{ $.Release.Name }}
        section: service
        component: alsvc_{{ . }}
    spec:
      containers:
      - name: install-alsvc-{{- . }}
        image: {{ $.Values.assemblylineServiceImagePrefix }}{{ . }}:stable
        imagePullPolicy: Always
        env:
          - name: SERVICE_API_HOST
            value: http://service-server:5003
          - name: REGISTER_ONLY
            value: 'True'
        resources:
          requests:
            cpu: {{ $.Values.installJobReqCPU }}
          limits:
            cpu: {{ $.Values.installJobLimCPU }}
            {{ if $.Values.namespaceResourceLimited }}
            memory: 1Gi
            {{ end }}
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
{{- end }}
{{ end }}
