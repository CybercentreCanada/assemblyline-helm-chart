{{ $server := genSelfSignedCert .Values.configuration.ui.fqdn nil nil 365 }}
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: ui-internal-generated-cert
  labels:
    app: assembyline
data:
  tls.crt: {{ b64enc $server.Cert }}
  tls.key: {{ b64enc $server.Key }}
---
apiVersion: v1
kind: Service
metadata:
  name: ui
  labels:
    app: assemblyline
    section: core
    component: ui
spec:
  clusterIP: None
  selector:
    app: assemblyline
    section: core
    component: ui
  ports:
  - protocol: TCP
    port: 5000
    targetPort: 5000
  sessionAffinity: ClientIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ui
  labels:
    app: assemblyline
    section: core
    component: ui
spec:
  replicas: {{ .Values.APIInstances }}
  revisionHistoryLimit: {{ .Values.revisionCount }}
  selector:
    matchLabels:
      app: assemblyline
      section: core
      component: ui
  template:
    metadata:
      labels:
        app: assemblyline
        section: core
        component: ui
    spec:
      priorityClassName: al-core-priority
      containers:
        - name: ui
          image: {{ .Values.assemblylineUIImage }}:{{ .Values.release }}
          {{ if .Values.enableCoreDebugging}}
          command: ["python", "-m", "debugpy", "--listen", "localhost:5678", "-m", "assemblyline_ui.app"]
          {{ end }}
          volumeMounts:
          {{ include "assemblyline.coreMounts" . | indent 12 }}
          ports:
            - containerPort: 5000
          env:
          {{ include "assemblyline.coreEnv" . | indent 12 }}
            - name: WORKERS
              value: '2'
          resources:
            limits:
              cpu: {{.Values.uiLimCPU}}
              {{ if .Values.namespaceResourceLimited }}
              memory: 2Gi
              {{ end }}
            requests:
              cpu: {{ .Values.uiReqCPU }}
              memory: {{ .Values.uiReqRam }}
          livenessProbe:
            httpGet:
              path: /healthz/live
              port: 5000
            timeoutSeconds: 5
            periodSeconds: 60
          startupProbe:
            httpGet:
              path: /healthz/ready
              port: 5000
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 60
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: 5000
            timeoutSeconds: 5
            periodSeconds: 60
      volumes:
      {{ include "assemblyline.coreVolumes" . | indent 8 }}
---
apiVersion: v1
kind: Service
metadata:
  name: internal-ui
  labels:
    app: assemblyline
    section: core
    component: internal-ui
spec:
  clusterIP: None
  selector:
    app: assemblyline
    section: core
    component: internal-ui
  ports:
  - protocol: TCP
    port: 5000
    targetPort: 5000
  sessionAffinity: ClientIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: internal-ui
  labels:
    app: assemblyline
    section: core
    component: internal-ui
spec:
  replicas: {{ .Values.internalAPIInstances }}
  revisionHistoryLimit: {{ .Values.revisionCount }}
  selector:
    matchLabels:
      app: assemblyline
      section: core
      component: internal-ui
  template:
    metadata:
      labels:
        app: assemblyline
        section: core
        component: internal-ui
    spec:
      priorityClassName: al-core-priority
      containers:
        - name: internal-ui
          image: {{ .Values.assemblylineUIImage }}:{{ .Values.release }}
          {{ if .Values.enableCoreDebugging}}
          command: ["python", "-m", "debugpy", "--listen", "localhost:5678", "-m", "assemblyline_ui.app"]
          {{ end }}
          env:
          {{ include "assemblyline.coreEnv" . | indent 12 }}
            - name: WORKERS
              value: '2'
            - name: AL_UNSECURED_UI
              value: "true"
          volumeMounts:
          {{ include "assemblyline.coreMounts" . | indent 12 }}
            - name: ssl-certs
              mountPath: "/etc/internal-ssl/"
              readOnly: true
          ports:
            - containerPort: 5000
          resources:
            limits:
              cpu: {{.Values.internalUILimCPU}}
              {{ if .Values.namespaceResourceLimited }}
              memory: 2Gi
              {{ end }}
            requests:
              cpu: {{ .Values.internalUIReqCPU }}
              memory: {{ .Values.internalUIReqRam }}
          livenessProbe:
            httpGet:
              path: /healthz/live
              port: 5000
            timeoutSeconds: 5
            periodSeconds: 60
          startupProbe:
            httpGet:
              path: /healthz/ready
              port: 5000
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 60
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: 5000
            timeoutSeconds: 5
            periodSeconds: 60
      volumes:
      {{ include "assemblyline.coreVolumes" . | indent 8 }}
        - name: ssl-certs
          secret:
            secretName: ui-internal-generated-cert
---
apiVersion: v1
kind: Service
metadata:
  name: socketio
  labels:
    app: assemblyline
    section: core
    component: socketio
spec:
  clusterIP: None
  selector:
    app: assemblyline
    section: core
    component: socketio
  ports:
  - protocol: TCP
    port: 5002
    targetPort: 5002
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: socketio
  labels:
    app: assemblyline
    section: core
    component: socketio
spec:
  replicas: 1
  revisionHistoryLimit: {{ .Values.revisionCount }}
  selector:
    matchLabels:
      app: assemblyline
      section: core
      component: socketio
  template:
    metadata:
      labels:
        app: assemblyline
        section: core
        component: socketio
    spec:
      priorityClassName: al-core-priority
      containers:
        - name: socketio
          image: {{ .Values.assemblylineSocketIOImage }}:{{ .Values.release }}
          {{ if .Values.enableCoreDebugging}}
          command: ["python", "-m", "debugpy", "--listen", "localhost:5678", "-m", "assemblyline_ui.socketsrv"]
          {{ end }}
          volumeMounts:
          {{ include "assemblyline.coreMounts" . | indent 12 }}
          ports:
            - containerPort: 5002
          env:
          {{ include "assemblyline.coreEnv" . | indent 12 }}
          resources:
            limits:
              cpu: {{.Values.socketIOLimCPU}}
              {{ if .Values.namespaceResourceLimited }}
              memory: 2Gi
              {{ end }}
            requests:
              cpu: {{ .Values.socketIOReqCPU }}
              memory: {{ .Values.socketIOReqRam }}
          livenessProbe:
            httpGet:
              path: /healthz/live
              port: 5002
            timeoutSeconds: 5
            periodSeconds: 60
          startupProbe:
            httpGet:
              path: /healthz/ready
              port: 5002
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 60
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: 5002
            timeoutSeconds: 5
            periodSeconds: 60
      volumes:
      {{ include "assemblyline.coreVolumes" . | indent 8 }}
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: assemblyline
    section: core
    component: frontend
spec:
  clusterIP: None
  selector:
    app: assemblyline
    section: core
    component: frontend
  ports:
  - protocol: TCP
    port: 3000
    targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    app: assemblyline
    section: core
    component: frontend
spec:
  replicas: 1
  revisionHistoryLimit: {{ .Values.revisionCount }}
  selector:
    matchLabels:
      app: assemblyline
      section: core
      component: frontend
  template:
    metadata:
      labels:
        app: assemblyline
        section: core
        component: frontend
    spec:
      priorityClassName: al-core-priority
      containers:
        - name: frontend
          image: {{ .Values.assemblylineFrontendImage }}:{{ .Values.release }}
          ports:
            - containerPort: 3000
          resources:
            requests:
              cpu: {{ .Values.frontendReqCPU }}
              memory: {{ .Values.frontendReqRam }}
            limits:
              cpu: 1
              {{ if .Values.namespaceResourceLimited }}
              memory: 1Gi
              {{ end }}
{{ if .Values.separateIngestAPI }}
---
apiVersion: v1
kind: Service
metadata:
  name: ui-ingest
  labels:
    app: assemblyline
    section: core
    component: ui-ingest
spec:
  clusterIP: None
  selector:
    app: assemblyline
    section: core
    component: ui-ingest
  ports:
  - protocol: TCP
    port: 5000
    targetPort: 5000
  sessionAffinity: ClientIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ui-ingest
  labels:
    app: assemblyline
    section: core
    component: ui-ingest
spec:
  replicas: {{ .Values.ingestAPIInstances }}
  revisionHistoryLimit: {{ .Values.revisionCount }}
  selector:
    matchLabels:
      app: assemblyline
      section: core
      component: ui-ingest
  template:
    metadata:
      labels:
        app: assemblyline
        section: core
        component: ui-ingest
    spec:
      priorityClassName: al-core-priority
      containers:
        - name: ui-ingest
          image: {{ .Values.assemblylineUIImage }}:{{ .Values.release }}
          {{ if .Values.enableCoreDebugging}}
          command: ["python", "-m", "debugpy", "--listen", "localhost:5678", "-m", "assemblyline_ui.app"]
          {{ end }}
          volumeMounts:
          {{ include "assemblyline.coreMounts" . | indent 12 }}
          ports:
            - containerPort: 5000
          env:
          {{ include "assemblyline.coreEnv" . | indent 12 }}
            - name: WORKERS
              value: '2'
          resources:
            limits:
              cpu: {{.Values.ingestUILimCPU}}
              {{ if .Values.namespaceResourceLimited }}
              memory: 2Gi
              {{ end }}
            requests:
              cpu: {{ .Values.ingestUIReqCPU }}
              memory: {{ .Values.ingestUIReqRam }}
          livenessProbe:
            httpGet:
              path: /healthz/live
              port: 5000
            timeoutSeconds: 5
            periodSeconds: 60
          startupProbe:
            httpGet:
              path: /healthz/ready
              port: 5000
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 60
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: 5000
            timeoutSeconds: 5
            periodSeconds: 60
      volumes:
      {{ include "assemblyline.coreVolumes" . | indent 8 }}
{{end}}
